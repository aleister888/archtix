#!/bin/sh

# Script para suspender el sistema hasta cierta hora (HH:MM)

REGULARUSER="$(getent passwd 1000 | cut -d: -f1)"
export DISPLAY=:0
export XDG_RUNTIME_DIR=/run/user/1000

wait_mins=10

# Comprobaciones:

# Verifica que el script se ejecuta como root
if [ "$(id -u)" -ne 0 ]; then
	echo "Error: Este script debe ejecutarse como root." >&2
	exit 1
fi

# Comprueba que el usuario regular existe
if [ -z "$REGULARUSER" ]; then
	echo "Error: No se encontró un usuario regular." >&2
	exit 1
fi

notify() {
	su "$REGULARUSER" -c \
		"notify-send -u critical -i system-error \"$1\""
}

tosleep() {
	target_time="$1"
	current_time=$(date +%s)
	wake_time_today=$(date -d "$(date +%Y-%m-%d) $target_time" +%s)

	if [ "$wake_time_today" -le "$current_time" ]; then
		# Si la hora de reactivación ya pasó, usa la de mañana
		wake_time=$(date -d "tomorrow $target_time" +%s)
	else
		# Si la hora de reactivación aún no ha pasado, usa la de hoy
		wake_time="$wake_time_today"
	fi

	if ! rtcwake -m mem -l -t "$wake_time"; then
		notify "Error al programar la suspensión"
		exit 1
	fi
}

# Validación de entrada: formato HH:MM
if [ -n "$1" ]; then
	if ! echo "$1" | grep -qE '^([01][0-9]|2[0-3]):[0-5][0-9]$'; then
		echo "Formato de hora incorrecto. Usa HH:MM (ej. 07:30)"
		exit 1
	fi
	wake_time="$1"
else
	wake_time="07:00"
fi

# Verifica si hay máquinas virtuales corriendo antes de suspender
if command -v virsh >/dev/null 2>&1; then
	VMs_activas="$(virsh list --state-running --id | grep -cv '^$')"
	if [ "$VMs_activas" -ge 1 ]; then
		notify "Suspensión cancelada (Máquina virtual activa)"
		exit
	fi
fi

# Si el usuario pasa "now", suspende inmediatamente, en el caso
# contrario, se esperan $wait_mins antes de suspender el equipo.
if [ "$2" != "now" ]; then
	notify "El sistema se suspenderá en $wait_mins minutos"
	sleep $((wait_mins * 60))
fi

tosleep "$wake_time"
