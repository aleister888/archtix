#!/bin/sh

# Alias para herramientas comunes
alias wget='wget --hsts-file="$XDG_CONFIG_HOME"/wget-hsts'
alias gpg2='gpg2 --homedir "$XDG_DATA_HOME"/gnupg'

# Alias de comandos básicos
alias v='nvim'
alias c='/bin/clear'
alias dmk='doas make install'
alias cp='cp -iv'
alias cat='bat -p --tabs 8'
alias ls='eza -lagX --time-style iso --group-directories-first --smart-group'
alias grep='grep --color=auto'

# Alias para moverse rápidamente entre directorios
alias ..='cd ..'
alias ...='cd ../..'

# Actualizar el sistema
alias update='yay -Syuu --answerclean --answerdiff --removemake --ignore i3lock-fancy-git --ignore eww-git'

# Herramientas
alias xdotool_table='xmodmap -pk'
alias push='git add . && git commit && git push'
alias du='BLOCKSIZE=1073741824 du -s * | sort -rnk 1'
alias grub-update='doas grub-mkconfig -o /boot/grub/grub.cfg'

# Limpiar dependencias innecesarias
alias cleanup='yay -Rcns $(yay -Qdtq)'

# Alias para encontrar enlaces simbólicos rotos y archivos no reclamados
alias brokenlink='find / -xtype l -print 2>/dev/null'
alias unownedfiles='doas find / ! -name "/mnt/*" -nogroup -nouser -print 2>/dev/null'
alias lostfiles='doas lostfiles | grep -iv "Theme\|opt\|Font"'

# Detectar que paquetes del AUR necesitan recompilarse
alias rebuild-detector="checkrebuild -v"

deepcleanup() {
	pacman -Qqd 2>/dev/null | \
	pacman -Rsu --print - 2>/dev/null | \
	grep - | sed 's/-[0-9].*//g' > /tmp/pacman_unneeded
	doas pacman -Rcns $(cat /tmp/pacman_unneeded | grep -v ca-certificates)
}

# Función para reinstalar todos los paquetes
reinstall() {
	yay -S $(pacman -Qq | grep -v "$(pacman -Qqm)")
}

# Función para restaurar los paquetes
# instalados explícitamente como tales
reexplicit() {
	for pack in $(yay -Qq); do
		if grep -E "\[ALPM\] installed" /var/log/pacman.log | \
		grep "$pack" >/dev/null 2>&1; then
			doas pacman -D --asexplicit "$pack"
		fi
	done
}

# Recuperación en caso de paquetes rotos
recoverypacman() {
	yay "$@"  \
	--logfile /dev/null   \
	--noscriptlet     \
	--dbonly          \
	--overwrite "*"   \
	--nodeps          \
	--needed
}

# Imprimir instancia, clase y título de la ventana seleccionada
xprop_wininfo(){
	xprop | awk '
	/^WM_CLASS/ {
		sub(/^.* = /, "instance:");
		sub(/,/, "\nclass:");
		print
	}
	/^WM_NAME/ {
		sub(/^.* = /, "title:");
		print
	}
	'
}

# Borrar entornos de un código laTeX
desencapsular() {
	tag="$1"
	shift
	perl -pe "s/\\\\$tag\\{([^{}]*(?:\\{$tag\\}[^{}]*)*)\\}/\$1/g" "$@"
}

# Grabar la pantalla
screenrecord() {
	# Verificar si se proporcionó un archivo de salida
	[ -z "$1" ] && {
		echo "Se debe dar como argumento el archivo de salida" >&2
		return 1
	}

	# Detectar resolución de pantalla
	RESOLUTION=$(xrandr | grep '*' | awk '{print $1}')

	# Definir dispositivos de audio
	MICROPHONE=$(pactl list sources | grep -oP "Name: \K.*input.*" | head -n 1)
	APPLICATIONS=$(pactl list sources | grep -oP "Name: \K.*output.*" | head -n 1)

	ffmpeg \
		-video_size "$RESOLUTION" \
		-framerate 30 \
		-f x11grab -i :0.0 \
		-f pulse -i "$MICROPHONE" \
		-f pulse -i "$APPLICATIONS" \
		-filter_complex "[1:a][2:a]amerge=inputs=2[audio]" \
		-map 0:v -map "[audio]" \
		-c:v libx264 -preset ultrafast -crf 18 \
		-c:a aac -b:a 192k \
		"$1"
}

yabridgectl_dirs(){
	[ -d "$WINEPREFIX/drive_c/Program Files/Common Files" ] && \
		yabridgectl add "$WINEPREFIX/drive_c/Program Files/Common Files"
	[ -d "$WINEPREFIX/drive_c/Program Files/Steinberg" ] && \
		yabridgectl add "$WINEPREFIX/drive_c/Program Files/Steinberg"
}

# Alias para encontrar archivos pac de pacman
pac() {
	# Buscar archivos .pacnew y .pacsave
	doas find /etc \( -name "*.pacnew" -o -name "*.pacsave" \) 2>/dev/null | while read -r file; do
		# Obtener el nombre del archivo original
		original_file="${file%.pacnew}"
		original_file="${original_file%.pacsave}"

		# Mostrar encabezado con formato
		printf "\n##$(printf '#%.0s' $(seq 1 ${#original_file}))##\n"
		printf "# $original_file #\n"
		printf "##$(printf '#%.0s' $(seq 1 ${#original_file}))##\n\n"

		# Mostrar diferencias y limitar la salida
		diff -d "$file" "$original_file" | head -n 20
	done
}
