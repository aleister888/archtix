#!/bin/sh

if [ ! -d $XDG_CACHE_HOME/lf ]; then
	mkdir $XDG_CACHE_HOME/lf &
fi

. ~/.config/lf/PIXELS

file=$1
w=$2
h=$3
x=$4
y=$5

filetype="$( file -Lb --mime-type "$file")"

# For the script you need to know first how many
# screen pixels equal to 1 column and 1 line on your terminal
# to determine that number run:
# echo $(($(xdotool getactivewindow getwindowgeometry --shell | grep WIDTH | sed 's/[^0-9]//g') / $COLUMNS ))
#
# This will output a number that you should put into
# the "PIXELS" variable, in the ~/.config/lf/PIXELS file.

RATIO=5
WIDTH=$(($(xdotool getactivewindow getwindowgeometry --shell | grep WIDTH | sed 's/[^0-9]//g')/$PIXELS/$RATIO))

# If Album Art preview is over the Song Info, set $RATIO smaller.

case "$(file --dereference --brief --mime-type -- "$1")" in

text/* | */xml | application/json) bat -fp --terminal-width "$4" -f "$1" ;;

text/troff) man ./ "$1" | col -b ;;

image/x-xcf )
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE.jpg" ] && convert "$1" "$CACHE.jpg"
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$CACHE.jpg" < /dev/null > /dev/tty
	exit 1 ;;

image/*)
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$file" < /dev/null > /dev/tty
	exit 1 ;;

audio/flac | audio/mpeg | audio/x-m4a )
PIXELS=19
BLINES=19
	ffmpeg -i "$1" -y -f ffmetadata "${XDG_CACHE_HOME:-$HOME/.cache}/lf/metadata.txt"
	NAME="$(cat ${XDG_CACHE_HOME:-$HOME/.cache}/lf/metadata.txt | grep -i ALBUM | rev | cut -d= -f1 | rev | tr -cd '[:alnum:]._-')"
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$NAME"
	[ ! -f "$CACHE.jpg" ] && ffmpeg -i "$1" -y -an -vcodec copy "$CACHE.jpg"
	printf "$(perl -E "say '\\n' x $WIDTH")$(cat ${XDG_CACHE_HOME:-$HOME/.cache}/lf/metadata.txt | grep -ivwE "(comment|encoder|ffmetadata1)")"
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$CACHE.jpg" < /dev/null > /dev/tty
	exit 1 ;;

audio/* | application/octet-stream) mediainfo "$1" | tr -s " " || exit 1;;

*/x-iso9660-image ) isoinfo -d -i "$1" || exit 1;;

video/* )
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$CACHE" < /dev/null > /dev/tty
	printf "$(perl -E "say '\\n' x $WIDTH")$(mediainfo "$1" | grep -E "File size|Duration|FPS|Movie name" | grep -v "SPF)" | tr '\t' ' '| tr -s " " | sort | uniq )"
	exit 1 ;;
*/pdf)
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$CACHE.jpg" < /dev/null > /dev/tty
	exit 1 ;;

# For Mangas in .cbz
*/zip)
	NAME="$(echo "$1" | rev | sed 's/ /_/g' | sed 's/\// /g' | awk '{print $1}' | rev)"
	FIRST="$(unzip -l "$1" | head -5 | tail -1 | awk '{$1=""; $2=""; $3=""; sub("   ", " "); print}' | cut -c 2-)"
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$NAME"
	[ ! -d "$CACHE" ] && 7z e "$1" -o"$CACHE" "$FIRST" >/dev/null
	IMG="$(find $CACHE | grep jpg | sort | head -n 1)"
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$IMG" < /dev/null > /dev/tty
	exit 1 ;;

*/postscript)
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE.jpg" ] && convert "$1" "$CACHE.jpg"
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$CACHE.jpg" < /dev/null > /dev/tty
	exit 1 ;;

*opendocument*) odt2txt "$1" | fold -w $WIDTH ;;

application/pgp-encrypted) gpg -d -- "$1" ;;

# If everythting fails, at least use mediainfo

*/*) mediainfo "$1" | tr -s " " || exit 1;;

esac
