#!/bin/sh

if [ ! -d $XDG_CACHE_HOME/lf ]; then
	mkdir $XDG_CACHE_HOME/lf &
fi

# File preview handler for lf.

set -C -f
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

image() {
	if [ -f "$1" ] && [ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ] && command -V ueberzug >/dev/null 2>&1; then
		printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' "$4" "$5" "$(($2-1))" "$(($3-1))" "$1" > "$FIFO_UEBERZUG"
	else
		mediainfo "$6"
	fi
}

# Note that the cache file name is a function of file information, meaning if
# an image appears in multiple places across the machine, it will not have to
# be regenerated once seen.

case "$(file --dereference --brief --mime-type -- "$1")" in

	text/* | */xml | application/json) bat -fp --terminal-width "$(($4-2))" -f "$1" ;;

text/troff) man ./ "$1" | col -b ;;

image/x-xcf )
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE.jpg" ] && convert "$1" "$CACHE.jpg"
	image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
	exit 1 ;;

image/svg+xml)
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
	[ ! -f "$CACHE" ] && inkscape --convert-dpi-method=none -o "$CACHE.png" --export-overwrite -D --export-png-color-mode=RGBA_16 "$1"
	image "$CACHE.png" "$2" "$3" "$4" "$5" "$1"
	exit 1 ;;

image/avif)
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
	[ ! -f "$CACHE" ] && convert "$1" "$CACHE.png"
	image "$CACHE.png" "$2" "$3" "$4" "$5" "$1"
	exit 1 ;;

image/*)
	image "$1" "$2" "$3" "$4" "$5"
	exit 1 ;;

audio/flac | audio/mpeg | audio/x-m4a )
	ffmpeg -i "$1" -y -f ffmetadata "${XDG_CACHE_HOME:-$HOME/.cache}/lf/metadata.txt"
	NAME="$(cat ${XDG_CACHE_HOME:-$HOME/.cache}/lf/metadata.txt | grep -i ALBUM | rev | cut -d= -f1 | rev | tr -cd '[:alnum:]._-')"
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$NAME"
	[ ! -f "$CACHE.jpg" ] && ffmpeg -i "$1" -y -an -vcodec copy "$CACHE.jpg"
	image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
	printf "$(perl -E "say '\\n' x $(($(($4-2))/5+2))")$(cat ${XDG_CACHE_HOME:-$HOME/.cache}/lf/metadata.txt | grep -ivwE "(comment|encoder|ffmetadata1)")"
	exit 1 ;;

audio/* | application/octet-stream) mediainfo "$1" | tr -s " " || exit 1;;

*/x-iso9660-image ) isoinfo -d -i "$1" || exit 1;;

video/* )
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
	image "$CACHE" "$2" "$3" "$4" "$5" "$1"
	printf "$(perl -E "say '\\n' x $(($(($4-2))/5+2))")$(mediainfo "$1" | grep -E "File size|Duration|FPS|Movie name" | grep -v "SPF)" | tr '\t' ' '| tr -s " " | sort | uniq )"
	exit 1 ;;
*/pdf)
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
	image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
	exit 1 ;;

# For Mangas in .cbz
*/zip)
	NAME="$(echo "$1" | rev | sed 's/ /_/g' | sed 's/\// /g' | awk '{print $1}' | rev)"
	FIRST="$(unzip -l "$1" | head -5 | tail -1 | awk '{$1=""; $2=""; $3=""; sub("   ", " "); print}' | cut -c 2-)"
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$NAME"
	[ ! -d "$CACHE" ] && 7z e "$1" -o"$CACHE" "$FIRST" >/dev/null
	IMG="$(find $CACHE | grep jpg | sort | head -n 1)"
	image "$IMG" "$2" "$3" "$4" "$5" "$1"
	exit 1 ;;

*/postscript)
	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
	[ ! -f "$CACHE.jpg" ] && convert "$1" "$CACHE.jpg"
	image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
	exit 1 ;;

*opendocument*) odt2txt "$1" | fold -w $(($(($4-2))/5+2)) ;;

application/pgp-encrypted) gpg -d -- "$1" ;;

# If everythting fails, at least use mediainfo

*/*) mediainfo "$1" | tr -s " " || exit 1;;

esac
