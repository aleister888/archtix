#!/bin/bash
# shellcheck disable=SC2155

# Parámetros del script
TARGET_DIR=${4:-$(pwd)} # Directorio del que extraeremos los datos
MAX_DIR="$TARGET_DIR/max"

# Función para procesar cada archivo CSV
process_csv() {
	local -r FILE="$1"                                                   # Archivo a procesar
	local -r EXERCISE_NAME=$(basename "$FILE" .csv)                      # Extraemos el nombre del ejercicio
	local -r DIR_NAME=$(dirname "$FILE")                                 # Directorio que contiene el archivo
	local -r MUSCLE_GROUP=$(basename "$DIR_NAME")                        # Grupo muscular del ejercicio
	local -r MAX_FILE="$MAX_DIR/$MUSCLE_GROUP/$EXERCISE_NAME".csv        # Archivo donde se guardará el peso máximo levantado por sesión
	local -r PLOT_FILE="$MAX_DIR/$MUSCLE_GROUP/plots/$EXERCISE_NAME".png # Archivo donde se guardará el peso máximo levantado por sesión

	mkdir -p "$(dirname "$MAX_FILE")"
	mkdir -p "$(dirname "$PLOT_FILE")"

	# Guardamos todas las filas del archivo en un array
	[[ ! -s "$FILE" ]] && return
	mapfile -t ALL_ROWS < <(awk -F, 'NR > 1 {print $0}' "$FILE")

	# Función para obtener los máximos
	get_maxs() {
		declare -A MAX_DATA # Array para almacenar el máximo por fecha
		for ROW in "${ALL_ROWS[@]}"; do
			IFS=',' read -r DATE W R S N <<<"$ROW"
			# Si MAX_DATA[$DATE] no está definido o si el peso actual es mayor, lo actualizamos
			if [[ ! "${MAX_DATA[$DATE]}" ]] || awk -v w="$W" -v max="${MAX_DATA[$DATE]%%,*}" 'BEGIN {exit !(w > max)}'; then
				MAX_DATA[$DATE]="$W,$R,$S,$N"
			fi
		done

		# Guardar los máximos en el archivo correspondiente
		echo "fecha_Y-m-d,total_kg,reps,status,notes" >"$MAX_FILE"
		for DATE in $(echo "${!MAX_DATA[@]}" | tr ' ' '\n' | sort); do
			echo "$DATE,${MAX_DATA[$DATE]}" >>"$MAX_FILE"
		done
	}
	# Graficar el progreso del peso máximo, junto con el producto
	# peso*repeticiones y el RM estimado con Brzycki
	plot_maxs() {
		cat <<-EOF | gnuplot
			set datafile separator ","
			set terminal pngcairo size 1600,1200 enhanced font 'Verdana,16'
			set output '$PLOT_FILE'
			set title "Peso Máximo, Producto y RM Estimado (Brzycki)"
			set xlabel "Fecha"
			set ylabel "Peso (kg)"
			set y2label "Producto (Peso * Reps)"
			set xdata time
			set timefmt "%Y-%m-%d"
			set format x "%Y-%m-%d"
			set grid
			set ytics nomirror
			set y2tics
			set key outside right

			plot '$MAX_FILE' using 1:2 with linespoints title "Peso Máximo" axes x1y1, \
				 '' using 1:(\$2 * \$3) with linespoints title "Peso * Reps" axes x1y2, \
				 '' using 1:(\$2 / (1.0278 - (0.0278 * \$3))) with linespoints title "RM Estimado (Brzycki)" axes x1y1, \
				 '' using 1:(\$2 * (1 + \$3 / 30)) with linespoints title "RM Estimado (Epley)" axes x1y1, \
				 '' using 1:2:3 with labels offset 0,1 notitle axes x1y1
		EOF
	}

	# Llamar a las subfunciones
	get_maxs
	plot_maxs
}

# Verificar si el directorio objetivo existe
if [[ ! -d "$TARGET_DIR" ]]; then
	echo "Error: El directorio '$TARGET_DIR' no existe."
	exit 1
fi

# Recorremos todos los archivos CSV en el directorio objetivo y sus subdirectorios, excluyendo los directorios max y last
find "$TARGET_DIR" -type d -path "$MAX_DIR" -prune -o -type f -name "*.csv" -print | while read -r FILE; do
	process_csv "$FILE"
done

echo "Procesamiento completado."
