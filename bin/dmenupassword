#!/bin/bash

# Script para navegar bases de datos de keepassxc con dmenu
# Créditos: https://github.com/neelkamal0310/keepassxc-dmenu/blob/main/keepmenu

# Para que el script funcione debes tener:
# - Una base de datos en el directorio home
# - Un archivo de texto con la contraseña de dicha base de datos (Encriptado con gpg)
#	- Crea tu clave gpg con: gpg --full-gen-key
#	- Crea un archivo de texto plano con la contraseña
#	- Encriptalo con: gpg -e -r ID_CLAVE ARCHIVO_TXT
#		- Puedes consultad el ID de tu clave con: gpg --list-secret-keys
#	- Finalmente puedes borrar el archivo original con: shred ARCHIVO_TXT

# Puedes guardar esta clave para usarla en un futuro
# - Lista las diferentes claves públicas que tienes: gpg --list-keys
#	- Guarda la clave que quieras en un archivo .asc: gpg --export -a KEY_ID > key.asc
#	- Puedes importarla con: gpg --import key.asc
# - Lista las diferentes claves secretas: gpg --list-secret-keys
#	- Guarda la clave que quieras: gpg --export-secret-keys KEY_ID > clave_secreta.gpg

# Crearemos una cache donde guardar la última base de datos y clave usadas

dunstctl close-all

cache="$HOME/.cache/dmenupassword"

# Si la cache no existe o tiene más de 6h, regenerarla
if [ ! -f "$cache" ] || [ $(( ( $(date +%s) - $(stat -c %Y ${cache}) ) / 3600 )) -gt 6 ]; then
	kdbx_files=$(find ~/ -name "*.kdbx")
	[ -z "$kdbx_files" ] && notify-send -i keepassxc "No se encontró ninguna base de datos" && exit

	gpg_files=$(find ~/ -path ~/.local/share/gnupg -prune -o -name "*.gpg" -print)
	[ -z "$gpg_files" ] && notify-send -i GPG-Key4 "No se encontró ninguna contraseña" && exit

	echo "$kdbx_files" | dmenu -p "Elige la base de datos" | tee "$cache"
	echo "$gpg_files" | dmenu -p "Elige la clave" | tee -a "$cache"
fi

# Localización de la base de datos y la clave
database="$(head -1 $cache)"; passgpg="$(tail -1 $cache)"
# Comando para dmenu
dmenu="dmenu -l 20"
# Tiempo que se espera para borrar las contraseñas del porta-papeles
timeout=10
# Contraseña desencriptada
pass="$(gpg -d ${passgpg} 2> /dev/null)"
# Entradas extraídas de la base de contraseñas
entry=$(echo ${pass} | keepassxc-cli ls "${database}" 2> /dev/null)
# Si no hay ninguna entrada, salir
[[ $entry ]] || exit
# Seleccionar entrada con dmenu
entry=$(echo "$entry" | eval $dmenu)

# Comprobar que si la entrada es un grupo:
# Si es un grupo extraer las distintas entradas que contiene
while : ; do
	# Si la entrada no es un directorio, muestra los detalles
	if [[ ! "$entry" =~ .*/ ]]; then
		[[ -z "$entry" ]] && exit 1 # Si no se seleccionó nada, salir
		details=$(echo ${pass} | keepassxc-cli show "${database}" "${entry}" 2> /dev/null | eval $dmenu)
		break
	else
		# Lista el contenido del directorio actual
		gentry=$(echo ${pass} | keepassxc-cli ls "${database}" "${entry}" 2> /dev/null | eval $dmenu)
		[[ -z "$gentry" ]] && exit 1 # Si no se seleccionó nada, salir
		if [[ "$gentry" =~ .*/ ]]; then
			# Si la entrada seleccionada es un directorio, actualiza `entry` para incluir `gentry`
			entry="${entry}${gentry}"
		else
			# Si la entrada seleccionada no es un directorio, muestra los detalles
			details=$(echo ${pass} | keepassxc-cli show "${database}" "${entry}${gentry}" 2> /dev/null | eval $dmenu)
			break
		fi
	fi
done

# Si no se selecciona nada, salir
[[ $details ]] || exit
# Determinar que campo de la entrada se ha seleccionado (Título, usuario, contraseña, etc.)
field=$(echo "$details" | cut -d ':' -f 1)

# Si el campo seleccionado es una contraseña, copiarlo de forma segura al porta-papeles.
# Si no es una contraseña, copiarlo directamente al portapapeles
if [[ "$field" == "Password" ]]; then
	notify-send "Contraseña copiada ${timeout}s"
	if [[ "$entry" =~ .*/ ]]; then
		echo ${pass} | keepassxc-cli clip "${database}" "${entry}${gentry}" > /dev/null
	else
		echo ${pass} | keepassxc-cli clip "${database}" "${entry}" > /dev/null
	fi
	sleep $timeout
	echo '' | xclip -sel clip
	notify-send "Se ha limpiado el portapapeles"
else
	echo "$details" | cut -d ':' -f 2- | sed 's/\s//' | xclip -sel clip
	notify-send "${field} Copiado al portapapeles"
fi
