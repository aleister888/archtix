#!/bin/bash

# Script para empezar un contador pomodoro

# Archivo donde se guardará el tiempo restante para que termine el contador
pomodorofile=/tmp/pomodoro_timer
# Archivo donde guardaremos los pid de los procesos
processlist=/tmp/pomodoro_processes
my_id=$BASHPID

# Archivo donde guardaremos si ya se ha completado el tiempo de trabajo
breakfile=/tmp/pomodoro_status

sound="/usr/share/sounds/freedesktop/stereo/complete.oga"

# Crear nuevo temporizador
create_timer() {
	local timerwork
	local timerbreak

	timerwork="$(dmenu -p "¿Minutos de trabajo? " </dev/null)"
	[ -z "$timerwork" ] && exit

	timerbreak="$(dmenu -p "¿Minutos de descanso? " </dev/null)"
	[ -z "$timerbreak" ] && exit

	if [ "$timerwork" -ge 61 ] || [ "$timerbreak" -ge 61 ]; then
		notify-send "El tiempo no puede exceder 1 hora"
		exit 1
	fi

	# Guardamos los tiempos en el archivo
	echo "W $((timerwork * 60))" | tee "$pomodorofile"
	echo "B $((timerbreak * 60))" | tee -a "$pomodorofile"
}

# Cerrar instancias previas del script
close_old() {
	while read -r id; do
		if [[ "$id" != "$my_id" ]]; then
			kill -9 "$id" 2>/dev/null
		fi
	done <"$processlist"
}
get_status() {
	# El tiempo de trabajo y de pausa se guarda en un archivo como líneas
	local content
	content="$(cat "$pomodorofile")"
	worktime="$(echo "$content" | grep -oP "^W \K[0-9]*")"
	breaktime="$(echo "$content" | grep -oP "^B \K[0-9]*")"
}

timer_count() {
	get_status
	local work_completed="false"

	echo $my_id | tee -a $processlist >/dev/null

	while [ "$worktime" -gt 0 ] || [ "$breaktime" -gt 0 ]; do
		grep true $breakfile && work_completed="true"
		if [ "$worktime" -gt 0 ]; then
			sed -i "s/^W [0-9]*/W $((worktime - 1))/" \
				"$pomodorofile"

			worktime=$((worktime - 1))
		else
			if [ "$work_completed" = "false" ]; then
				echo "true" >$breakfile
				pw-play $sound
				notify-send "Hora del descanso"
			fi
			sed -i "s/^B [0-9]*/B $((breaktime - 1))/" \
				"$pomodorofile"

			breaktime=$((breaktime - 1))
		fi
		sleep 1
	done

	rm "$pomodorofile"
	pw-play $sound
	notify-send "Temporizador completado"

	rm "$processlist"
	rm "$breakfile"
}

# Si el archivo no existe, creamos un nuevo temporizador
if [ ! -f "$pomodorofile" ]; then
	create_timer
	timer_count
# Si existen instancias previas, preguntar al usuario
elif [ "$(cat $processlist | wc -l)" -ge 1 ]; then
	pauseopt="Pausar"
	deleteopt="Eliminar"
	eleccion="$(echo -e "$pauseopt\n$deleteopt" | dmenu)"

	if [ "$eleccion" = "$pauseopt" ]; then
		notify-send "Temporizador pausado"
		close_old
		rm "$processlist"
	elif [ "$eleccion" = "$deleteopt" ]; then
		rm "$pomodorofile"
		notify-send "Temporizador eliminado"
		close_old
		rm "$processlist"
		rm "$breakfile"
	fi
else
	notify-send "Temporizador reanudado"
	timer_count
fi
